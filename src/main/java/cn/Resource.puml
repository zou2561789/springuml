@startuml
class  DefaultResourceLoader {
    - ClassLoader classLoader
    - {final} Set<ProtocolResolver> protocolResolvers
    - {final} Map<Class<?>, Map<Resource, ?>> resourceCaches
    + ClassLoader getClassLoader()
    + Collection<ProtocolResolver> getProtocolResolvers()
    +  <T> Map<Resource, T> getResourceCache(Class<T> valueType)
    + void clearResourceCaches()
    + Resource getResource(String location)
    Resource getResourceByPath(String path)
    - void setClassLoader(@Nullable ClassLoader classLoader)
    - void addProtocolResolver(ProtocolResolver resolver)
}
class ClassPathContextResource{
  + String getPathWithinContext()
  + Resource createRelative(String relativePath)
}
interface ProtocolResolver{
  Resource resolve(String location, ResourceLoader resourceLoader)
}
abstract class AbstractResource{
   + boolean exists()
   + boolean isReadable()
   + boolean isOpen()
   + boolean isFile()
   + URL getURL()
   + URI getURI()
   + File getFile()
   + ReadableByteChannel readableChannel()
   + long contentLength()
   + long lastModified()
   +  File getFileForLastModifiedCheck()
   + Resource createRelative(String relativePath)
   + String getFilename()
   + boolean equals(Object other)
   + int hashCode()
   + String toString()
}
abstract class AbstractFileResolvingResource{
    + boolean exists()
    + boolean isReadable()
    + boolean isFile()
    + File getFile()
    + File getFileForLastModifiedCheck()
    + ReadableByteChannel readableChannel() throws IOException
    + long contentLength() throws IOException
    + long lastModified() throws IOException
     boolean isFile(URI uri)
     File getFile(URI uri)
     void customizeConnection(URLConnection con) throws IOException
     void customizeConnection(HttpURLConnection con) throws IOException
}
class UrlResource{
       - {final} URI uri
       - {final} URL url
       - {final} URL cleanedUrl
       + InputStream getInputStream() throws IOException
       + URL getURL()
       + URI getURI() throws IOException
       + boolean isFile()
       + File getFile() throws IOException
       + Resource createRelative(String relativePath) throws MalformedURLException
       + String getFilename()
       + String getDescription()
       + boolean equals(Object other)
       + int hashCode()
       - URL getCleanedUrl(URL originalUrl, String originalPath)
}
class FileUrlResource{
    -{volatile} File file
    + File getFile() throws IOException
    + boolean isWritable()
    + OutputStream getOutputStream()  throws IOException
    + WritableByteChannel writableChannel() throws IOException
    + Resource createRelative(String relativePath) throws MalformedURLException
}
class ClassPathResource{
  -{final} path
  - ClassLoader classLoader
  - Class<?> clazz
  + {final}  String getPath()
  + {final} ClassLoader getClassLoader()
  + boolean exists()
  + Resource createRelative(String relativePath)
  + InputStream getInputStream() throws IOException
  + Resource createRelative(String relativePath)
  + URL getURL() throws IOException
  + String getFilename()
    URL resolveURL()
}
class ServletContextResource{
  - {final} ServletContext servletContext
  - {final} String path
  + {final} ServletContext getServletContext()
  + {final} String getPath()
  + {final} boolean exists()
  + boolean isReadable()
  + boolean isFile()
  + InputStream getInputStream() throws IOException
  + URL getURL() throws IOException
  + File getFile() throws IOException
  + Resource createRelative(String relativePath)
  + String getFilename()
  + String getDescription()
  + boolean equals(Object other)
  + int hashCode()
}
interface WritableResource{
   boolean isWritable()
   OutputStream getOutputStream() throws IOException
   default WritableByteChannel writableChannel() throws IOException
}
interface ResourceLoader{
  String CLASSPATH_URL_PREFIX
  Resource getResource(String location)
  ClassLoader getClassLoader()
}
interface Resource{
  boolean isReadable()
  boolean isOpen()
  boolean isFile()
  URL getURL() throws IOException
  URI getURI() throws IOException
  File getFile() throws IOException
  ReadableByteChannel readableChannel() throws IOException
  long contentLength() throws IOException
  long lastModified() throws IOException
  Resource createRelative(String relativePath) throws IOException
  String getFilename()
  String getDescription()
}
interface InputStreamSource{
     InputStream getInputStream() throws IOException
}
interface ContextResource{
  String getPathWithinContext()
}
FileUrlResource --|>UrlResource
FileUrlResource ..|> WritableResource
UrlResource --|>AbstractFileResolvingResource
DefaultResourceLoader ..|>ResourceLoader
DefaultResourceLoader --> ClassPathContextResource
DefaultResourceLoader <..o Resource
Resource --|>InputStreamSource
WritableResource --|>Resource
ClassPathContextResource ..|>ContextResource
ContextResource --|>Resource
AbstractResource ..|>Resource
ServletContextResource --|>AbstractFileResolvingResource
ServletContextResource ..|>ContextResource
@enduml